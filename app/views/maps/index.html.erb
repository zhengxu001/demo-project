<%- model_class = Map -%>
<script src="//maps.google.com/maps/api/js?key=AIzaSyC8agpAoft-vY5VFdol4o33aEwhm1tD1DA"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->

<div class="page-header">
  <h1><%=t '.title', :default => model_class.model_name.human.pluralize.titleize %></h1>
</div>

<table class="table table-striped">
  <thead>
    <tr>
      <th><%= model_class.human_attribute_name(:id) %></th>
      <th><%= model_class.human_attribute_name(:created_at) %></th>
      <th><%=t '.actions', :default => t("helpers.actions") %></th>
    </tr>
  </thead>
  <tbody>
    <% @maps.each do |map| %>
      <tr>
        <td><%= link_to map.id, map_path(map) %></td>
        <td><%=l map.created_at %></td>
        <td>
          <%= link_to t('.show', :default => t("helpers.links.show")),
                      map_path(map), :class => 'btn btn-default btn-xs' %>
          <%= link_to t('.edit', :default => t("helpers.links.edit")),
                      edit_map_path(map), :class => 'btn btn-default btn-xs' %>
          <%= link_to t('.destroy', :default => t("helpers.links.destroy")),
                      map_path(map),
                      :method => :delete,
                      :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
                      :class => 'btn btn-xs btn-danger' %>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

<%= link_to t('.new', :default => t("helpers.links.new")),
            new_map_path,
            :class => 'btn btn-primary' %>

<div style='width: 800px;'>
  <div id="map" style='width: 800px; height: 400px;'></div>
</div>

<script type="text/javascript">
  handler = Gmaps.build('Google');
  handler.buildMap({ internal: { id: 'map'} },
    function(){
      // markers = handler.addMarkers(<%=raw @hash.to_json %>);
      var polygons = handler.addPolygons(
      [
        [
          {lat:  48, lng: -3.5}, { lat: 51, lng: -0.5},
          {lat:  48, lng:  2.5}, { lat: 51, lng:  5.5},
          {lat:  48, lng:  8.5}, { lat: 42, lng:  2.5},
        ]
      ],
      { strokeColor: '#FF0000'}
      );
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
    }
  );

</script>